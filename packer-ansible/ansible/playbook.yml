- hosts: all
  become: true
  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install prerequisites for MongoDB
      apt:
        name:
          - gnupg
          - wget
        state: present

    - name: Install unzip utility (required to extract Terraform)
      apt:
        name: unzip
        state: present

    - name: Download the MongoDB public GPG key
      get_url:
        url: https://www.mongodb.org/static/pgp/server-7.0.asc
        dest: /etc/apt/trusted.gpg.d/server-7.0.asc
        mode: "0644"

    - name: Create the list file for MongoDB
      copy:
        content: "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse"
        dest: /etc/apt/sources.list.d/mongodb-org-7.0.list
        mode: "0644"

    - name: Reload local package database
      apt:
        update_cache: yes

    - name: Install the mongosh package
      apt:
        name: mongodb-mongosh
        state: present

    - name: Download Terraform binary
      get_url:
        url: "https://releases.hashicorp.com/terraform/1.5.2/terraform_1.5.2_linux_amd64.zip"
        dest: "/tmp/terraform.zip"

    - name: Unzip Terraform binary
      unarchive:
        src: "/tmp/terraform.zip"
        dest: "/usr/local/bin/"
        remote_src: yes
        creates: "/usr/local/bin/terraform"

    - name: Verify Terraform installation
      command: terraform version
      register: terraform_version

    - name: Show Terraform version
      debug:
        msg: "{{ terraform_version.stdout }}"

    - name: Ensure the script is present on the control node
      copy:
        content: |
          #!/bin/bash

          # Update and install necessary packages
          sudo apt-get install gnupg curl
          curl -fsSL https://www.mongodb.org/static/pgp/server-6.0.asc | \
             sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg \
             --dearmor
          # Add MongoDB GPG key and repository
          echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list

          # Install MongoDB
          sudo apt-get update
          sudo apt-get install -y mongodb-org

          # Ensure MongoDB binaries are in the PATH
          sudo apt-get update
          sudo apt-get install -y mongodb-org

          # Create directories for data and logs
          sudo mkdir -p /var/lib/mongo1 /var/lib/mongo2 /var/lib/mongo3
          sudo mkdir -p /var/log/mongodb
          sudo chown -R $(id -u) /var/lib/mongo1 /var/lib/mongo2 /var/lib/mongo3
          sudo chown -R $(id -u) /var/log/mongodb

          # Generate keyfile for internal authentication
          openssl rand -base64 756 > /var/lib/mongo1/keyfile
          sudo cp /var/lib/mongo1/keyfile /var/lib/mongo2/keyfile
          sudo cp /var/lib/mongo1/keyfile /var/lib/mongo3/keyfile
          sudo chmod 400 /var/lib/mongo1/keyfile
          sudo chmod 400 /var/lib/mongo2/keyfile
          sudo chmod 400 /var/lib/mongo3/keyfile
          sudo chown $(id -u) /var/lib/mongo1/keyfile
          sudo chown $(id -u) /var/lib/mongo2/keyfile
          sudo chown $(id -u) /var/lib/mongo3/keyfile

          # Create configuration files for each MongoDB instance
          cat <<EOF | sudo tee /etc/mongod1.conf
          storage:
            dbPath: /var/lib/mongo1
          systemLog:
            destination: file
            path: /var/log/mongodb/mongod1.log
            logAppend: true
          net:
            bindIp: localhost
            port: 27017
          replication:
            replSetName: rs0
          security:
            authorization: enabled
            keyFile: /var/lib/mongo1/keyfile
          processManagement:
            fork: true
          EOF

          cat <<EOF | sudo tee /etc/mongod2.conf
          storage:
            dbPath: /var/lib/mongo2
          systemLog:
            destination: file
            path: /var/log/mongodb/mongod2.log
            logAppend: true
          net:
            bindIp: localhost
            port: 27018
          replication:
            replSetName: rs0
          security:
            authorization: enabled
            keyFile: /var/lib/mongo2/keyfile
          processManagement:
            fork: true
          EOF

          cat <<EOF | sudo tee /etc/mongod3.conf
          storage:
            dbPath: /var/lib/mongo3
          systemLog:
            destination: file
            path: /var/log/mongodb/mongod3.log
            logAppend: true
          net:
            bindIp: localhost
            port: 27019
          replication:
            replSetName: rs0
          security:
            authorization: enabled
            keyFile: /var/lib/mongo3/keyfile
          processManagement:
            fork: true
          EOF

          # Start MongoDB instances
          sudo mongod --config /etc/mongod1.conf
          sudo mongod --config /etc/mongod2.conf
          sudo mongod --config /etc/mongod3.conf

          # Initialize the replica set
          sudo mongosh --eval 'rs.initiate({_id: "rs0", members: [{ _id: 0, host: "localhost:27017" }, { _id: 1, host: "localhost:27018" }, { _id: 2, host: "localhost:27019" }]})' --port 27017
        dest: /tmp/setup_mongodb.sh
        mode: '0755'

    - name: Execute the MongoDB setup script
      command: /tmp/setup_mongodb.sh
